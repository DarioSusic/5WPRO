{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/AppNavbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/Dashboard.js","components/contact/Contact.js","components/profile/Profile.js","components/cart/Cart.js","components/layout/ErrorPage.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","async","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLink","Nav","className","Item","Link","href","onClick","icon","faShoppingCart","guestLinks","Navbar","bg","variant","Brand","alt","src","width","height","Toggle","aria-controls","Collapse","Landing","Carousel","Caption","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","to","Form","onSubmit","preventDefault","Group","controlId","Label","Control","required","placeholder","Button","login","alerts","alert","length","map","Alert","key","Dashboard","props","Contact","Profile","Cart","ErrorPage","Component","component","rest","render","Routes","exact","path","Register","Login","NotFound","initialState","getItem","user","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08d91324.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\n\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/login');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//LOGOUT - Clear profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\n\nexport const AppNavbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLink = (\n    <Nav className='ml-auto'>\n      <Nav.Item>\n        <Nav.Link href='/profiles'>Profile</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href='/dashboard'>Dashboard</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link onClick={logout} href='#!'>\n          Logout\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href='/cart'>\n          <FontAwesomeIcon className='fa-lg' icon={faShoppingCart} />\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n\n  const guestLinks = (\n    <Nav className='ml-auto'>\n      <Nav.Item>\n        <Nav.Link href='/contact'>Contact</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href='/register'>Register</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href='/login'>Login</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href='/cart'>\n          <FontAwesomeIcon className='fa-lg' icon={faShoppingCart} />\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n\n  return (\n    <Navbar bg='dark' variant='dark'>\n      <Navbar.Brand href='/'>\n        <img\n          alt=''\n          src='#'\n          width='30'\n          height='30'\n          className='d-inline-block align-top'\n        />{' '}\n        5WPro\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        {!loading && (\n          <Fragment>{isAuthenticated ? authLink : guestLinks}</Fragment>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nAppNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(AppNavbar);\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Card from 'react-bootstrap/Card';\n\nconst Landing = () => {\n  return (\n    <Carousel>\n      <Carousel.Item>\n        <img\n          className='d-block w-100'\n          src='https://mdbootstrap.com/img/Photos/Slides/img%20(6).jpg?text=First slide&bg=373940'\n          alt='First slide'\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className='d-block w-100'\n          src='https://mdbootstrap.com/img/Photos/Slides/img%20(33).jpg?text=First slide&bg=373940'\n          alt='First slide'\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n  );\n};\n\nexport default Landing;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n//Theme\nimport { Form, Button } from 'react-bootstrap';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <Form onSubmit={e => onSubmit(e)}>\n        <Form.Group controlId='formGridName'>\n          <Form.Label>Name and Surname</Form.Label>\n          <Form.Control\n            value={name}\n            name='name'\n            onChange={e => onChange(e)}\n            type='text'\n            required\n            placeholder='Enter your name and surname'\n          />\n        </Form.Group>\n\n        <Form.Group controlId='formGridEmail'>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            value={email}\n            name='email'\n            onChange={e => onChange(e)}\n            type='email'\n            placeholder='Enter email'\n            required\n          />\n        </Form.Group>\n\n        <Form.Group controlId='formGridPassword'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            value={password}\n            name='password'\n            onChange={e => onChange(e)}\n            type='password'\n            required\n            placeholder='Password'\n          />\n        </Form.Group>\n\n        <Form.Group controlId='formGridPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            value={password2}\n            name='password2'\n            onChange={e => onChange(e)}\n            type='password'\n            required\n            placeholder='Confirm Password'\n          />\n        </Form.Group>\n\n        <Button variant='primary' value='Register' type='submit'>\n          Submit\n        </Button>\n      </Form>\n      <p>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nimport { Form, Button } from 'react-bootstrap';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  //Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Login to your Account\n      </p>\n      <Form onSubmit={e => onSubmit(e)}>\n        <Form.Group controlId='formGridEmail'>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type='email'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            placeholder='Enter email'\n          />\n        </Form.Group>\n\n        <Form.Group controlId='formGridPassword'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            placeholder='Password'\n          />\n        </Form.Group>\n\n        <Button variant='primary' type='submit'>\n          Submit\n        </Button>\n      </Form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Alert } from 'react-bootstrap';\n\n//TODO fix alert\nconst Alerts = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <Alert key={alert.id} variant={alert.alertType}>\n      {alert.msg}\n    </Alert>\n  ));\n\nAlerts.propTypes = {\n  alerts: propTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Dashboard = props => {\n  return <div>Dashboard</div>;\n};\n\nDashboard.propTypes = {};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Contact = () => {\n  return <div>Contact Page</div>;\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst Profile = () => {\n  return <div>Profile Page</div>;\n};\n\nexport default Profile;\n","import React from 'react';\n\nconst Cart = () => {\n  return <div>This is Cart page</div>;\n};\n\nexport default Cart;\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\n//TODO edit 404\nconst ErrorPage = () => {\n  return (\n    <div id='notfound'>\n      <div className='notfound'>\n        <div className='notfound-404'>\n          <h1>Oops!</h1>\n          <h2>404 - The Page cannot be found</h2>\n        </div>\n        <a>\n          <NavLink to='/'>Go TO Homepage</NavLink>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport Dashboard from '../dashboard/Dashboard';\nimport Contact from '../contact/Contact';\nimport Profile from '../profile/Profile';\nimport Cart from '../cart/Cart';\nimport NotFound from '../layout/ErrorPage';\n\nimport PrivateRoute from './PrivateRoute';\n\nconst Routes = () => {\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/cart' component={Cart} />\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        <PrivateRoute exact path='/profiles' component={Profile} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n  alert,\n  auth\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/AppNavbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}